import React, { useState } from 'react';
import './SideBar.css'; // Add this for styling

const Sidebar = ({ logo, menuItems, darkThemeEnabled, onThemeToggle }) => {
  const [isCollapsed, setIsCollapsed] = useState(true); // Default collapsed

  const toggleSidebar = () => {
    setIsCollapsed(!isCollapsed);
  };

  const [activeIndex, setActiveIndex] = useState(0); // Active menu index

  const handleMenuClick = (index) => {
    setActiveIndex(index);
  };

  return (
    <div className={`sidebar ${isCollapsed ? 'collapsed' : 'expanded'}`}>
      {/* Sidebar Header */}
      <div className="sidebar-header">
        <div className="logo">{logo}</div>
        <button className="toggle-btn" onClick={toggleSidebar}>
          {isCollapsed ? '>' : 'X'}
        </button>
      </div>

      {/* Sidebar Menu */}
      <ul className="menu">
        {menuItems.map((item, index) => (
          <li
            key={index}
            className={`menu-item ${activeIndex === index ? 'active' : ''}`}
            onClick={() => handleMenuClick(index)}
          >
            <i className={`icon ${item.iconClass}`}></i>
            {!isCollapsed && <span className="menu-text">{item.label}</span>}
          </li>
        ))}
      </ul>

      {/* Dark Theme Toggle */}
      {!isCollapsed && darkThemeEnabled && (
        <div className="theme-toggle">
          <label>
            Dark theme
            <input type="checkbox" onChange={onThemeToggle} />
          </label>
        </div>
      )}
    </div>
  );
};

export default Sidebar;


/* Base Sidebar Styles */
.sidebar {
  width: 80px; /* Collapsed width */
  height: 100vh;
  background-color: #1c1c1c;
  color: white;
  position: fixed;
  display: flex;
  flex-direction: column;
  transition: width 0.3s ease;
}

.sidebar.expanded {
  width: 250px; /* Expanded width */
}

.sidebar-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
}

.logo {
  font-size: 1.5rem;
  font-weight: bold;
}

.toggle-btn {
  background: none;
  border: none;
  color: white;
  cursor: pointer;
  font-size: 1rem;
}

/* Menu Styles */
.menu {
  list-style: none;
  padding: 0;
  margin: 0;
  flex-grow: 1;
}

.menu-item {
  padding: 10px 20px;
  display: flex;
  align-items: center;
  cursor: pointer;
  transition: background-color 0.2s ease, border-left 0.2s ease;
  border-left: 4px solid transparent;
}

.menu-item:hover {
  background-color: #333;
}

.menu-item.active {
  border-left: 4px solid #ff5722; /* Active red border */
}

.icon {
  font-size: 1.2rem;
}

.menu-text {
  margin-left: 10px;
  font-size: 1rem;
}

/* Theme Toggle */
.theme-toggle {
  margin-top: auto;
  padding: 10px 20px;
  font-size: 0.9rem;
}

/* Dark Theme */
body.dark-theme {
  background-color: #121212;
  color: white;
}
